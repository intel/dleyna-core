DISCONTINUATION OF PROJECT.

This project will no longer be maintained by Intel.

Intel will not provide or guarantee development of or support for this project, including but not limited to, maintenance, bug fixes, new releases or updates.

Patches to this project are no longer accepted by Intel.

If you have an ongoing need to use this project, are interested in independently developing it,
or would like to maintain patches for the community, please create your own fork of the project.

Introduction:
-------------

TODO

Compilation
------------

TODO

Working with the source code repository
---------------------------------------

dleyna-core can be downloaded, compiled and installed as
follows:

   Clone repository
     # git clone git://github.com/01org/dleyna-core.git
     # cd dleyna-core

   Configure and build
     # ./autogen.sh
     # make

   Final installation
     # sudo make install

These instructions are suitable for users who simply want to install
and run dleyna-core.  However, developers wishing to contribute
to the project should follow a separate "Configure and build" step.

   Configure and build
     # ./bootstrap-configure
     # make

The script "bootstrap-configure" cleans the repository, calls
autreconf and then invokes configure with proper settings for
development.  These settings include the enabling of
maintainer mode and debugging.

Developers can remove autogenerated files with the following command

     # make maintainer-clean

Configure Options:
------------------

--enable-werror

This option is disabled by default.  To enable use --enable-werror.
When enabled, all warnings are treated as errors during compilation.
Should be enabled during development to ensure that errors do not
creep into the code base.  This option is enabled by
bootstrap-configure.

--enable-debug

This option is disabled by default.  To enable use
--enable-debug. When enabled, the make files produce debug builds.
This option is enabled by bootstrap-configure.

--enable-optimization

This option is enabled by default. To disable use
--disable-optimization. When enabled it turns on compiler
optimizations. Disable = -O0, enable = -O2.

--with-log-level

See logging.txt for more information about logging.
